---
import Sun from "@lucide/astro/icons/sun";
import Moon from "@lucide/astro/icons/moon";
import Menu from "@lucide/astro/icons/menu";

import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

function goToSection(section: string) {
  return `/${lang != "en" ? lang : ""}#${section}`;
}

const links = [
  { name: t("sections.about"), route: goToSection("about") },
  {
    name: t("sections.projects"),
    route: goToSection("projects"),
  },
  { name: t("sections.skills"), route: goToSection("skills") },
  { name: "Blog", route: "/blog" },
];
---

<header
  class="sticky top-0 flex max-w-[100ch] items-center justify-between border-b border-zinc-300 bg-zinc-50/90 p-3 backdrop-blur md:top-4 md:mx-auto md:mt-4 md:rounded-full md:border dark:border-zinc-700 dark:bg-zinc-800/90"
>
  <nav class="relative">
    <!-- Desktop menu -->
    <ul class="hidden gap-1 md:flex">
      {
        links.map(({ name, route }) => (
          <li>
            <a
              class="block rounded-full px-4 py-2 text-nowrap transition-[background-color,scale] hover:bg-zinc-950/10 active:scale-95 hover:dark:bg-zinc-50/10"
              href={route}
            >
              {name}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Hamburger menu -->
    <button
      id="mobile-menu-toggle"
      class="block cursor-pointer rounded-full px-3 py-2 transition-[background-color,scale] hover:bg-zinc-950/10 active:scale-95 md:hidden hover:dark:bg-zinc-50/10"
      aria-label="Toggle menu"
      aria-expanded="false"
    >
      <Menu />
    </button>

    <!-- Dropdown -->
    <div
      id="mobile-menu"
      class="absolute top-full left-0 mt-2 hidden w-48 rounded-lg border border-zinc-300 bg-zinc-50/95 p-2 shadow-lg backdrop-blur md:hidden dark:border-zinc-700 dark:bg-zinc-800/95"
    >
      <ul class="space-y-1">
        {
          links.map(({ name, route }) => (
            <li>
              <a
                class="block rounded-md px-3 py-2 text-sm transition-[background-color] hover:bg-zinc-950/10 hover:dark:bg-zinc-50/10"
                href={route}
              >
                {name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>

  <!-- Light/Dark mode -->
  <div>
    <button
      id="theme-toggle"
      class="block cursor-pointer rounded-full px-4 py-2 text-nowrap transition-[background-color,scale] hover:bg-zinc-950/10 active:scale-95 hover:dark:bg-zinc-50/10"
      aria-label="Toggle theme"
    >
      <Sun id="icon-sun" class="h-5 w-5 dark:hidden" />
      <Moon id="icon-moon" class="hidden h-5 w-5 dark:block" />
    </button>
  </div>
</header>

<script>
  // Theme toggle
  const toggleBtn = document.getElementById("theme-toggle");
  const root = document.documentElement;

  const applyTheme = (isDark: boolean) => {
    root.classList.toggle("dark", isDark);
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  toggleBtn?.addEventListener("click", () => {
    const isDarkNow = root.classList.contains("dark");
    applyTheme(!isDarkNow);
  });

  // Hamburger menu toggle
  document
    .getElementById("mobile-menu-toggle")
    ?.addEventListener("click", () => {
      const menu = document.getElementById("mobile-menu");
      const button = document.getElementById("mobile-menu-toggle");

      if (menu?.classList.contains("hidden")) {
        menu.classList.remove("hidden");
        button?.setAttribute("aria-expanded", "true");
      } else {
        menu?.classList.add("hidden");
        button?.setAttribute("aria-expanded", "false");
      }
    });

  // Close menu
  document.addEventListener("click", (e) => {
    const menu = document.getElementById("mobile-menu");
    const button = document.getElementById("mobile-menu-toggle");

    if (!button?.contains(e.target) && !menu?.contains(e.target)) {
      menu?.classList.add("hidden");
      button?.setAttribute("aria-expanded", "false");
    }
  });
  document.querySelectorAll("#mobile-menu a").forEach((link) => {
    link.addEventListener("click", () => {
      const menu = document.getElementById("mobile-menu");
      const button = document.getElementById("mobile-menu-toggle");

      menu?.classList.add("hidden");
      button?.setAttribute("aria-expanded", "false");
    });
  });
</script>
