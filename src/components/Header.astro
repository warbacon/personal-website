---
import { Sun, Moon } from "@lucide/astro";

const links = [
  { name: "About me", route: "/#about" },
  { name: "Skills", route: "/#skills" },
  { name: "Projects", route: "/#projects" },
  { name: "Blog", route: "/blog" },
];
---

<header
  class="sticky top-0 flex max-w-[100ch] items-center justify-between border-b border-zinc-300 bg-zinc-50/90 p-3 backdrop-blur md:top-4 md:mx-auto md:mt-4 md:rounded-full md:border dark:border-zinc-700 dark:bg-zinc-800/90"
>
  <nav>
    <ul class="flex gap-1">
      {
        links.map(({ name, route }) => (
          <li>
            <a
              class="hidden rounded-full px-4 py-2 text-nowrap transition-[background-color,scale] hover:bg-zinc-950/10 active:scale-95 md:block hover:dark:bg-zinc-50/10"
              href={route}
            >
              {name}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <div>
    <button
      id="theme-toggle"
      class="block cursor-pointer rounded-full px-4 py-2 text-nowrap transition-[background-color,scale] hover:bg-zinc-950/10 active:scale-95 hover:dark:bg-zinc-50/10"
      aria-label="Toggle theme"
    >
      <Sun id="icon-sun" class="h-5 w-5 dark:hidden" />
      <Moon id="icon-moon" class="hidden h-5 w-5 dark:block" />
    </button>
  </div>
</header>

<script is:inline>
  const toggleBtn = document.getElementById("theme-toggle");
  const root = document.documentElement;

  const applyTheme = (isDark) => {
    root.classList.toggle("dark", isDark);
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  const userTheme = localStorage.getItem("theme");
  const systemPrefersDark = window.matchMedia(
    "(prefers-color-scheme: dark)",
  ).matches;
  const isDark = userTheme === "dark" || (!userTheme && systemPrefersDark);
  applyTheme(isDark);

  toggleBtn.addEventListener("click", () => {
    const isDarkNow = root.classList.contains("dark");
    applyTheme(!isDarkNow);
  });
</script>
